(function () {
  var diff, e, sum, sum_then_diff, _$err, tot;
  sum = function (a, b, _) {
    var e, tot;
    try {
      tot = a + b;
      return _(null, tot);
    } catch (_error) {
      e = _error;
      return _(e);
    }
  };
  diff = function (a, b, _) {
    var e, tot;
    try {
      tot = a / b;
      return _(null, tot);
    } catch (_error) {
      e = _error;
      return _(e);
    }
  };
  sum_then_diff = function (a, b, c, _) {
    var e, _$err, tot;
    (function (_$cont) {
      try {
        sum(a, b, function () {
          try {
            _$err = arguments[0];
            tot = arguments[1];
            if (_$err)
              throw _$err;
            diff(tot, c, function () {
              try {
                _$err = arguments[0];
                tot = arguments[1];
                if (_$err)
                  throw _$err;
                return _(null, tot);
                _$cont();
              } catch (_$err) {
                _$cont(_$err);
              }
            });
          } catch (_$err) {
            _$cont(_$err);
          }
        });
      } catch (_$err) {
        _$cont(_$err);
      }
    }(function (_error) {
      if (_error !== undefined) {
        e = _error;
        return _(e);
      }
    }));
  };
  (function (_$cont) {
    try {
      sum_then_diff(1, 8, 3, function () {
        try {
          _$err = arguments[0];
          tot = arguments[1];
          if (_$err)
            throw _$err;
          console.log(tot);
          _$cont();
        } catch (_$err) {
          _$cont(_$err);
        }
      });
    } catch (_$err) {
      _$cont(_$err);
    }
  }(function (_error) {
    if (_error !== undefined) {
      e = _error;
      console.error(e);
    }
  }));
}.call(this));
/* Generated by Continuation.js v0.1.3 */
//@ sourceMappingURL=main.js.map